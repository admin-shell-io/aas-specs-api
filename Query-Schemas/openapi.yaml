openapi: 3.0.3

info:
  title: DotAAS Query | Schemas
  description: >- 
    The schemas implementing the AAS Query Language.  
    
    Publisher: Industrial Digital Twin Association (IDTA) 2024
  contact:
    name: Industrial Digital Twin Association (IDTA)
    email: info@idtwin.org
  license: 
    name: CC BY 4.0
    url: https://creativecommons.org/licenses/by/4.0/
  version: 3.1.0

components:
  schemas:
    query:
      type: object
      properties:
        select:
          type: string
          pattern: ^id$
        filter:
          $ref: '#/components/schemas/logicalExpression'
        option:
          $ref: '#/components/schemas/OptionStatement'
        $schema:
          type: string
    OptionStatement:
      type: object
      properties:
        sort:
          type: object
          properties:
            id:
              type: string
              enum:
                - asc
                - dsc
        limit:
          type: number
        skip:
          type: number
      additionalProperties: false
    standardString:
      type: string
      pattern: ^(?!\$).*
    modelStringPattern:
      type: string
      pattern: >-
        ^\$(aas|sm|sme|cd|aasdesc|smdesc)(\..[^#]*)?\#(idShort|displayName|description|id|assetKind|assetType|globalAssetId|specificAssetId|submodel|semanticId|value|valueType|submodelDescriptors|language).*$
    hexLiteralPattern:
      type: string
      pattern: '^16#[0-9A-F]+$'
    dateTimeLiteralPattern:
      type: string
      format: date-time
    timeLiteralPattern:
      type: string
      pattern: '^[0-9][0-9]:[0-9][0-9](:[0-9][0-9])?$'
    castValues:
      type: object
      properties:
        numVal:
          type: number
        hexVal:
          $ref: '#/components/schemas/hexLiteralPattern'
        dateTimeVal:
          $ref: '#/components/schemas/dateTimeLiteralPattern'
        timeVal:
          $ref: '#/components/schemas/timeLiteralPattern'
      oneOf:
        - required:
            - numVal
        - required:
            - hexVal
        - required:
            - dateTimeVal
        - required:
            - timeVal
      additionalProperties: false
    Value:
      type: object
      properties:
        strModel:
          $ref: '#/components/schemas/modelStringPattern'
        strVal:
          $ref: '#/components/schemas/standardString'
        numVal:
          type: number
        hexVal:
          $ref: '#/components/schemas/hexLiteralPattern'
        dateTimeVal:
          $ref: '#/components/schemas/dateTimeLiteralPattern'
        timeVal:
          $ref: '#/components/schemas/timeLiteralPattern'
        castToString:
          $ref: '#/components/schemas/castValues'
        attribute:
          $ref: '#/components/schemas/attributeItem'
      oneOf:
        - required:
            - strModel
        - required:
            - strVal
        - required:
            - numVal
        - required:
            - hexVal
        - required:
            - dateTimeVal
        - required:
            - timeVal
        - required:
            - castToString
        - required:
            - attribute
      additionalProperties: false
    StringValue:
      type: object
      properties:
        strModel:
          $ref: '#/components/schemas/modelStringPattern'
        strVal:
          $ref: '#/components/schemas/standardString'
        castToString:
          $ref: '#/components/schemas/castValues'
        attribute:
          $ref: '#/components/schemas/attributeItem'
      oneOf:
        - required:
            - strModel
        - required:
            - strVal
        - required:
            - castToString
        - required:
            - attribute
      additionalProperties: false
    comparisonItems:
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/Value'
    stringItems:
      type: array
      minItems: 2
      maxItems: 2
      items:
        $ref: '#/components/schemas/StringValue'
    logicalExpression:
      type: object
      properties:
        $and:
          type: array
          minItems: 2
          items:
            $ref: '#/components/schemas/logicalExpression'
        $match:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/logicalExpression'
        $or:
          type: array
          minItems: 2
          items:
            $ref: '#/components/schemas/logicalExpression'
        $not:
          $ref: '#/components/schemas/logicalExpression'
        $eq:
          $ref: '#/components/schemas/comparisonItems'
        $ne:
          $ref: '#/components/schemas/comparisonItems'
        $gt:
          $ref: '#/components/schemas/comparisonItems'
        $ge:
          $ref: '#/components/schemas/comparisonItems'
        $lt:
          $ref: '#/components/schemas/comparisonItems'
        $le:
          $ref: '#/components/schemas/comparisonItems'
        $contains:
          $ref: '#/components/schemas/stringItems'
        $starts-with:
          $ref: '#/components/schemas/stringItems'
        $ends-with:
          $ref: '#/components/schemas/stringItems'
        $regex:
          $ref: '#/components/schemas/stringItems'
        $boolean:
          type: boolean
      oneOf:
        - required:
            - $and
        - required:
            - $or
        - required:
            - $not
        - required:
            - $eq
        - required:
            - $ne
        - required:
            - $gt
        - required:
            - $ge
        - required:
            - $lt
        - required:
            - $le
        - required:
            - $contains
        - required:
            - $starts-with
        - required:
            - $ends-with
        - required:
            - $regex
        - required:
            - $boolean
        - required:
            - $match
      additionalProperties: false
    attributeItem:
      oneOf:
        - required:
            - CLAIM
        - required:
            - GLOBAL
        - required:
            - REFERENCE
      properties:
        CLAIM:
          type: string
        GLOBAL:
          type: string
          enum:
            - LOCALNOW
            - UTCNOW
            - CLIENTNOW
            - ANONYMOUS
        REFERENCE:
          type: string
      additionalProperties: false
    objectItem:
      oneOf:
        - required:
            - ROUTE
        - required:
            - IDENTIFIABLE
        - required:
            - REFERABLE
        - required:
            - FRAGMENT
        - required:
            - DESCRIPTOR
      properties:
        ROUTE:
          type: string
        IDENTIFIABLE:
          type: string
        REFERABLE:
          type: string
        FRAGMENT:
          type: string
        DESCRIPTOR:
          type: string
      additionalProperties: false
    rightsEnum:
      type: string
      enum:
        - CREATE
        - READ
        - UPDATE
        - DELETE
        - EXECUTE
        - VIEW
        - ALL
        - TREE
      additionalProperties: false
  type: object
  properties:
    filter:
      $ref: '#/components/schemas/logicalExpression'
      additionalProperties: false
    AllAccessPermissionRules:
      type: array
      items:
        type: object
        properties:
          ATTRIBUTES:
            type: array
            items:
              $ref: '#/components/schemas/attributeItem'
          RIGHTS:
            type: array
            items:
              $ref: '#/components/schemas/rightsEnum'
          ACCESS:
            type: string
            enum:
              - ALLOW
              - DISABLED
          OBJECTS:
            type: array
            items:
              $ref: '#/components/schemas/objectItem'
          FORMULA:
            $ref: '#/components/schemas/logicalExpression'
          FILTER:
            $ref: '#/components/schemas/logicalExpression'
          additionalProperties: false
        required:
          - ATTRIBUTES
          - RIGHTS
          - ACCESS
          - OBJECTS
          - FORMULA
      additionalProperties: false