{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Common JSON Schema for AAS Queries and Access Rules",
  "description": "This schema contains all classes that are shared between the AAS Query Language and the AAS Access Rule Language.",
  "definitions": {
    "standardString": {
      "type": "string",
      "pattern": "^(?!\\$).*"
    },
    "modelString": {
      "oneOf": [
        {
          "$ref": "#/definitions/FieldIdentifierAAS"
        },
        {
          "$ref": "#/definitions/FieldIdentifierSM"
        },
        {
          "$ref": "#/definitions/FieldIdentifierSME"
        },
        {
          "$ref": "#/definitions/FieldIdentifierCD"
        },
        {
          "$ref": "#/definitions/FieldIdentifierAasDescriptor"
        },
        {
          "$ref": "#/definitions/FieldIdentifierSmDescriptor"
        }
      ]
    },
    "FieldIdentifierAAS": {
      "type": "string",
      "pattern": "^\\$aas\\.(idShort|id|assetInformation\\.(assetKind|assetType|globalAssetId|specificAssetIds(\\[[0-9]+\\])?\\.(name|value|externalSubjectId\\.(type|keys(\\[[0-9]+\\])?\\.(type|value))))|submodels\\.(type|keys(\\[[0-9]+\\])?\\.(type|value)))$"
    },
    "FieldIdentifierSM": {
      "type": "string",
      "pattern": "^\\$sm\\.(semanticId\\.(type|keys(\\[[0-9]+\\])?\\.(type|value))|idShort|id)$"
    },
    "FieldIdentifierSME": {
      "type": "string",
      "pattern": "^\\$sme\\.((([a-zA-Z][a-zA-Z0-9_]*)(\\[[0-9]+\\])?(\\.[a-zA-Z][a-zA-Z0-9_]*)*)\\.?)?(semanticId\\.(type|keys(\\[[0-9]+\\])?\\.(type|value))|idShort|value|valueType)$"
    },
    "FieldIdentifierCD": {
      "type": "string",
      "pattern": "^\\$cd\\.(idShort|id)$"
    },
    "FieldIdentifierAasDescriptor": {
      "type": "string",
      "pattern": "^\\$aasdesc\\.(idShort|id|assetKind|assetType|globalAssetId|specificAssetIds(\\[[0-9]+\\])?\\.(name|value|externalSubjectId\\.(type|keys(\\[[0-9]+\\])?\\.(type|value)))|submodelDescriptor\\.(semanticId\\.(type|keys(\\[[0-9]+\\])?\\.(type|value))|idShort|id))$"
    },
    "FieldIdentifierSmDescriptor": {
      "type": "string",
      "pattern": "^\\$smdesc\\.(semanticId\\.(type|keys(\\[[0-9]+\\])?\\.(type|value))|idShort|id)$"
    },
    "Value": {
      "type": "object",
      "properties": {
        "strModel": {
          "$ref": "#/definitions/modelString"
        },
        "strVal": {
          "$ref": "#/definitions/standardString"
        },
        "numVal": {
          "type": "number"
        },
        "strAsNum": {
          "$ref": "#/definitions/StringValue"
        }
      },
      "oneOf": [
        {
          "required": [
            "strModel"
          ]
        },
        {
          "required": [
            "strVal"
          ]
        },
        {
          "required": [
            "numVal"
          ]
        },
        {
          "required": [
            "strAsNum"
          ]
        }
      ],
      "additionalProperties": false
    },
    "StringValue": {
      "type": "object",
      "properties": {
        "strModel": {
          "$ref": "#/definitions/modelString"
        },
        "strVal": {
          "$ref": "#/definitions/standardString"
        },
        "numVal": {
          "type": "number"
        }
      },
      "oneOf": [
        {
          "required": [
            "strModel"
          ]
        },
        {
          "required": [
            "strVal"
          ]
        },
        {
          "required": [
            "numVal"
          ]
        }
      ],
      "additionalProperties": false
    },
    "comparisonItems": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/Value"
      }
    },
    "stringItems": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "$ref": "#/definitions/StringValue"
      }
    },
    "logicalExpression": {
      "type": "object",
      "properties": {
        "$and": {
          "type": "array",
          "minItems": 2,
          "items": {
            "$ref": "#/definitions/logicalExpression"
          }
        },
        "$or": {
          "type": "array",
          "minItems": 2,
          "items": {
            "$ref": "#/definitions/logicalExpression"
          }
        },
        "$not": {
          "$ref": "#/definitions/logicalExpression"
        },
        "$eq": {
          "$ref": "#/definitions/comparisonItems"
        },
        "$ne": {
          "$ref": "#/definitions/comparisonItems"
        },
        "$gt": {
          "$ref": "#/definitions/comparisonItems"
        },
        "$ge": {
          "$ref": "#/definitions/comparisonItems"
        },
        "$lt": {
          "$ref": "#/definitions/comparisonItems"
        },
        "$le": {
          "$ref": "#/definitions/comparisonItems"
        },
        "$contains": {
          "$ref": "#/definitions/stringItems"
        },
        "$starts-with": {
          "$ref": "#/definitions/stringItems"
        },
        "$boolean": {
          "type": "boolean"
        }
      },
      "oneOf": [
        {
          "required": [
            "$and"
          ]
        },
        {
          "required": [
            "$or"
          ]
        },
        {
          "required": [
            "$not"
          ]
        },
        {
          "required": [
            "$eq"
          ]
        },
        {
          "required": [
            "$ne"
          ]
        },
        {
          "required": [
            "$gt"
          ]
        },
        {
          "required": [
            "$ge"
          ]
        },
        {
          "required": [
            "$lt"
          ]
        },
        {
          "required": [
            "$le"
          ]
        },
        {
          "required": [
            "$contains"
          ]
        },
        {
          "required": [
            "$starts-with"
          ]
        },
        {
          "required": [
            "$ends-with"
          ]
        },
        {
          "required": [
            "$regex"
          ]
        },
        {
          "required": [
            "$boolean"
          ]
        }
      ],
      "additionalProperties": false
    },
    "attributeItem": {
      "oneOf": [
        {
          "required": [
            "CLAIM"
          ]
        },
        {
          "required": [
            "GLOBAL"
          ]
        },
        {
          "required": [
            "REFERENCE"
          ]
        }
      ],
      "properties": {
        "CLAIM": {
          "type": "string"
        },
        "GLOBAL": {
          "type": "string",
          "enum": [
            "LOCALNOW",
            "UTCNOW",
            "CLIENTNOW",
            "ANONYMOUS"
          ]
        },
        "REFERENCE": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "objectItem": {
      "oneOf": [
        {
          "required": [
            "ROUTE"
          ]
        },
        {
          "required": [
            "IDENTIFIABLE"
          ]
        },
        {
          "required": [
            "REFERABLE"
          ]
        },
        {
          "required": [
            "FRAGMENT"
          ]
        },
        {
          "required": [
            "DESCRIPTOR"
          ]
        }
      ],
      "properties": {
        "ROUTE": {
          "type": "string"
        },
        "IDENTIFIABLE": {
          "type": "string"
        },
        "REFERABLE": {
          "type": "string"
        },
        "FRAGMENT": {
          "type": "string"
        },
        "DESCRIPTOR": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "rightsEnum": {
      "type": "string",
      "enum": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "EXECUTE",
        "VIEW",
        "ALL",
        "TREE"
      ],
      "additionalProperties": false
    }
  }
}