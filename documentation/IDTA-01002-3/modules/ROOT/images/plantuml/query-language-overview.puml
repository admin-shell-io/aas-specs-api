@startuml
!pragma useIntermediatePackages false
skinparam classAttributeIconSize 0

hide methods 

class Query {
    +select: SelectField[0..1]
    +filter: Formula[1..*]
    +option: Option[0..1]
}
 
Query ..> SelectField
Query ..> Formula
Query ..> OptionStatement

' to better arrange the SelectField
SelectField -r[hidden]- Placeholder1
Placeholder1 -r[hidden]- Formula
hide Placeholder1

' to better arrange the OptionStatement
OptionStatement -l[hidden]- Placeholder2
Placeholder2 -l[hidden]- Formula
hide Placeholder2
 
enum SelectField {
     id
}

class OptionStatement {
    sort: id asc/dsc
    limit: non-negative number
    offset: non-negative number
}


  class Formula {
  }

  enum logicalOperation <<enumeration>> {
    $and
    $or
    $not
    nested
  }

  class logicalExpression {
    +operation: logicalOperation[1]
    +operands: Formula[1..*]
  }

  class match {
    +operands: Formula[1..*]
  }

  enum comparisonOperation <<enumeration>> {
    $eq
    $ne
    $gt
    $ge
    $lt
    $le
  }
  enum dataType <<enumeration>> {
    String
    Numerical
    DateTime
    Time
  }
  class comparison {
    +type: dataType[1]
    +operation: comparisonOperation[1]
    +operands: comparisonOperand[2]
  }

  enum stringOperation <<enumeration>> {
    $contains
    $starts-with
    $ends-with
    $regex
  }
  class stringExpression {
    +operation: stringOperation[1]
    +operands: stringOperand[2]
  }

  enum BoolLiteral <<enumeration>> {
    true
    false
  }
  class castToBool {}

  Formula <.d.> logicalExpression
  logicalExpression ..> logicalOperation
  stringExpression ..> stringOperation
  Formula ..> comparison
  Formula <..> match
  comparison ..> dataType
  comparison ..> comparisonOperation
  Formula ..> stringExpression
  Formula .d.> castToBool
  Formula .d.> BoolLiteral

'for better arrangements of the classes below Formula
' match .l[hidden]. comparison



@enduml