@startuml

participant Client as "Client Application"


box "Discovery Service"
  participant AASDiscovery as "AAS Discovery Interface"
end box

box "Registry Service"
   participant AASRegistry as "AAS Registy Interface"
end box

box "AAS or Submodel Service"
  participant iSM as "Submodel Interface"
end box

box "AAS or Submodel Repository Service"
  participant SMRepo as "Submodel Repository Interface"
end box

Client -> Client : select asset links

Client -> AASDiscovery: POST /lookup/shellsByAssetLink
Client <-- AASDiscovery : IDs of AAS
Client -> Client : select AAS ID


Client -> AASRegistry : GET /shell-descriptors/<aas-id>
Client <-- AASRegistry : 200: {AAS Descriptor with Submodel Endpoints}
Client -> Client : extract relevant Submodel Endpoints


Client -> iSM : GET /aas/submodels/<submodel-id> or GET /submodel
note left
get first Submodel via Endpoint
end note
Client <-- iSM : 200: {Submodel}

Client -> SMRepo: GET /shells/<aas-id>/submodels/<submodel-id> or /submodels/<submodel-id>
note left
get second Submodel via Endpoint
end note
note right
for the client it is 
not visible which
API-operation is called
since the client 
application just uses 
the endpoint
provided by the 
registry
end note

Client <-- SMRepo : 200: {Submodel}

@enduml
