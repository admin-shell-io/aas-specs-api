# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.3
info:
  title: DotAAS Part 2 | API | Schemas
  description: The schemas implementing Details of the Asset Administration Shell Part 2
  contact:
    name: Constantin Ziesche, Andreas Orzelski, Florian Krebs, Bastian RÃ¶ssl, Manuel Sauer, Jens Vialkowitsch, Michael Hoffmeister, Torben Miny, Sebastian Bader, Marko Ristin, Nico Braunisch
  version: V1.0RC03
  termsOfService: https://github.com/admin-shell-io/aas-specs
components: 
  parameters:
    Level:
      name: level
      in: query
      description: Determines the structural depth of the respective resource content
      required: false
      schema:
        type: string
        default: deep
        enum:
          - deep
          - core
    Content:
      name: content
      in: query
      description: Determines the request or response kind of the resource
      required: false
      schema:
        type: string
        default: normal
        enum:
          - normal
          - metadata
          - value
          - reference
          - path
    Extent:
      name: extent
      in: query
      description: Determines to which extent the resource is being serialized
      required: false
      schema:
        type: string
        enum:
          - withBlobValue
          - withoutBlobValue
    SemanticId:
      name: semanticId
      in: query
      description: The value of the semantic id reference (BASE64-URL-encoded)
      schema:
        type: string
  schemas: 
    AnnotatedRelationshipElementMetadata: 
      $ref: "#/components/schemas/SubmodelElementAttributes"
    AnnotatedRelationshipElementValue: 
      properties: 
        first: 
          $ref: "#/components/schemas/ReferenceValue"
        second: 
          $ref: "#/components/schemas/ReferenceValue"
        annotation:
          type: array
          items:
            $ref: "#/components/schemas/ValueOnly"
      required: 
        - first
        - second
      type: object
    AssetAdministrationShellDescriptor: 
      allOf: 
        - $ref: "#/components/schemas/Descriptor"
        - properties: 
            administration: 
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/AdministrativeInformation"
            descriptions: 
              type: array
              items:
                $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/LangString"
            displayNames: 
              type: array
              items:
                $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/LangString"
            globalAssetId: 
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Reference"
            idShort: 
              type: string
            identification: 
              type: string
            specificAssetIds: 
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/SpecificAssetId"
            submodelDescriptors: 
              items: 
                $ref: "#/components/schemas/SubmodelDescriptor"
              type: array
      required: 
        - identification
        - endpoints
      type: object
      example: '{ "identification": "https://example.org/aas/motor", "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
    AssetAdministrationShellMetadata: 
      allOf: 
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Identifiable"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/HasDataSpecification"
        - properties: 
            derivedFrom: 
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Reference"
    BasicEventElementMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
        - properties: 
            direction: 
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Direction"
            state: 
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/StateOfEvent"
            messageTopic: 
              type: string
            messageBroker: 
              $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Reference"
            lastUpdate: 
              type: string
            minInterval: 
              type: string
            maxInterval: 
              type: string
    BasicEventElementValue:
      properties: 
        observed: 
          $ref: "#/components/schemas/ReferenceValue"
      required:
        - observed
      type: object
    BlobMetadata: 
      $ref: "#/components/schemas/SubmodelElementAttributes"
    BlobValue: 
      properties: 
        contentType: 
          type: string
        value: 
          type: string
      required: 
        - contentType
        - value
      type: object
    BooleanValue: 
      type: boolean
    CapabilityMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    Descriptor: 
      example: '{ "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
      properties: 
        endpoints: 
          items: 
            $ref: "#/components/schemas/Endpoint"
          type: array
      type: object
    Endpoint: 
      properties: 
        interface: 
          type: string
        protocolInformation: 
          $ref: "#/components/schemas/ProtocolInformation"
      required: 
        - protocolInformation
        - interface
      type: object
    EntityMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    EntityValue: 
      properties: 
        entityType: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/EntityType"
        globalAssetId: 
          $ref: "#/components/schemas/ReferenceValue"
        specificAssetIds:
          type: array
          items: 
            $ref: "#/components/schemas/SpecificAssetIdValue"
        statements: 
          items: 
            $ref: "#/components/schemas/ValueOnly"
          type: array
      required: 
        - statements
        - entityType
      type: object
    ExecutionState:
      enum: 
        - Initiated
        - Running
        - Completed
        - Canceled
        - Failed
        - Timeout
      type: string
    FileValue: 
      properties: 
        contentType: 
          type: string
        value: 
          type: string
      required: 
        - contentType
        - value
      type: object
    FileMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    SpecificAssetIdValue:
      type: object
      description: Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value.
    Message: 
      properties: 
        code: 
          type: string
        messageType: 
          enum: 
            - Undefined
            - Info
            - Warning
            - Error
            - Exception
          type: string
        text: 
          type: string
        timestamp: 
          type: string
      type: object
    MultiLanguagePropertyMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    MultiLanguagePropertyValue: 
      type: object
      description: Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value.
    NumberValue: 
      type: number
    OperationHandle: 
      properties: 
        handleId: 
          type: string
        requestId: 
          type: string
      type: object
    OperationMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    OperationRequest: 
      properties: 
        inoutputArguments: 
          items: 
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/OperationVariable"
          type: array
        inputArguments: 
          items: 
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/OperationVariable"
          type: array
        requestId: 
          type: string
        timeout: 
          type: integer
      type: object
    OperationRequestValueOnly: 
      properties: 
        inoutputArguments: 
          $ref: "#/components/schemas/ValueOnly"
        inputArguments: 
          $ref: "#/components/schemas/ValueOnly"
        requestId: 
          type: string
        timeout: 
          type: integer
      type: object
    OperationResult: 
      properties: 
        executionResult: 
          $ref: "#/components/schemas/Result"
        executionState: 
          $ref: "#/components/schemas/ExecutionState"
        inoutputArguments: 
          items: 
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/OperationVariable"
          type: array
        outputArguments: 
          items: 
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/OperationVariable"
          type: array
        requestId: 
          type: string
      type: object
    OperationResultValueOnly: 
      properties: 
        executionResult: 
          $ref: "#/components/schemas/Result"
        executionState: 
          $ref: "#/components/schemas/ExecutionState"
        inoutputArguments: 
          $ref: "#/components/schemas/ValueOnly"
        outputArguments: 
          $ref: "#/components/schemas/ValueOnly"
        requestId: 
          type: string
      type: object
    PackageDescription: 
      properties: 
        aasIds: 
          items: 
            type: string
          type: array
        packageId: 
          type: string
      type: object
    PropertyMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
      properties: 
        valueType: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/DataTypeDefXsd"
    PropertyValue: 
      oneOf: 
        - $ref: "#/components/schemas/StringValue"
        - $ref: "#/components/schemas/NumberValue"
        - $ref: "#/components/schemas/BooleanValue"
    ProtocolInformation: 
      properties: 
        endpointAddress: 
          type: string
        endpointProtocol: 
          type: string
        endpointProtocolVersion: 
          type: string
        subprotocol: 
          type: string
        subprotocolBody: 
          type: string
        subprotocolBodyEncoding: 
          type: string
      required: 
        - endpointAddress
      type: object
    RangeMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
      properties: 
        valueType: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/DataTypeDefXsd"
    RangeValue: 
      properties: 
        max: 
          type: number
        min: 
          type: number
      required: 
        - min
        - max
      type: object
    ReferenceElementMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    ReferenceElementValue: 
      $ref: "#/components/schemas/ReferenceValue"
    ReferenceValue:
      type: object
      properties:
        type: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/ReferenceTypes"
        keys:
          type: array
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Key"
    RelationshipElementMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    RelationshipElementValue: 
      properties: 
        first: 
          $ref: "#/components/schemas/ReferenceValue"
        second: 
          $ref: "#/components/schemas/ReferenceValue"
      required: 
        - first
        - second
      type: object
    Result: 
      properties: 
        messages: 
          items: 
            $ref: "#/components/schemas/Message"
          type: array
        success: 
          type: boolean
      type: object
    StringValue: 
      type: string
    SubmodelDescriptor: 
      allOf: 
        - $ref: "#/components/schemas/Descriptor"
      properties: 
        administration: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/AdministrativeInformation"
        descriptions: 
          type: array
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/LangString"
        displayNames: 
          type: array
          items:
            $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/LangString"
        idShort: 
          type: string
        identification: 
          type: string
        semanticId: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Reference"
      required: 
        - identification
        - endpoints
      type: object
      example: '{ "identification": "https://admin-shell.io/zvei/nameplate/1/0/Nameplate", "endpoints": [ { "protocolInformation": { "endpointAddress": "https://localhost:1234", "endpointProtocolVersion": "1.1" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "opc.tcp://localhost:4840" }, "interface": "AAS-1.0" }, { "protocolInformation": { "endpointAddress": "https://localhost:5678", "endpointProtocolVersion": "1.1", "subprotocol": "OPC UA Basic SOAP", "subprotocolBody": "ns=2;s=MyAAS", "subprotocolBodyEncoding": "application/soap+xml" }, "interface": "AAS-1.0" } ] }'
    SubmodelElementAttributes: 
      allOf: 
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Referable"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/HasDataSpecification"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/HasSemantics"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Qualifiable"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/HasKind"
    SubmodelElementListMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
      properties: 
        orderRelevant:
          type: boolean
        semanticIdListElement: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Reference"
        typeValueListElement: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/ModelType"
        valueTypeListElement: 
          $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/DataTypeDefXsd"
    SubmodelElementListValue:
      type: array
      items:
        $ref: "#/components/schemas/SubmodelElementValue"
    SubmodelElementCollectionMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
    SubmodelElementCollectionValue: 
      type: object
      description: Since patternProperties and propertyNames are not supported by OpenApi yet, the ValueOnly serialization for this elements works with the key-attribute as the JSON-property name and the value-attribute as the corresponding value.
    SubmodelElementMetadata: 
      allOf: 
        - $ref: "#/components/schemas/SubmodelElementAttributes"
      oneOf: 
        - $ref: "#/components/schemas/BlobMetadata"
        - $ref: "#/components/schemas/FileMetadata"
        - $ref: "#/components/schemas/CapabilityMetadata"
        - $ref: "#/components/schemas/EntityMetadata"
        - $ref: "#/components/schemas/BasicEventElementMetadata"
        - $ref: "#/components/schemas/MultiLanguagePropertyMetadata"
        - $ref: "#/components/schemas/OperationMetadata"
        - $ref: "#/components/schemas/PropertyMetadata"
        - $ref: "#/components/schemas/RangeMetadata"
        - $ref: "#/components/schemas/ReferenceElementMetadata"
        - $ref: "#/components/schemas/AnnotatedRelationshipElementMetadata"
        - $ref: "#/components/schemas/RelationshipElementMetadata"
        - $ref: "#/components/schemas/SubmodelElementListMetadata"
        - $ref: "#/components/schemas/SubmodelElementCollectionMetadata"
    SubmodelElementValue: 
      oneOf: 
        - $ref: "#/components/schemas/BasicEventElementValue"
        - $ref: "#/components/schemas/PropertyValue"
        - $ref: "#/components/schemas/MultiLanguagePropertyValue"
        - $ref: "#/components/schemas/FileValue"
        - $ref: "#/components/schemas/BlobValue"
        - $ref: "#/components/schemas/RangeValue"
        - $ref: "#/components/schemas/ReferenceElementValue"
        - $ref: "#/components/schemas/RelationshipElementValue"
        - $ref: "#/components/schemas/AnnotatedRelationshipElementValue"
        - $ref: "#/components/schemas/EntityValue"
        - $ref: "#/components/schemas/SubmodelElementCollectionValue"
        - $ref: "#/components/schemas/SubmodelElementListValue"
    SubmodelMetadata: 
      allOf: 
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Identifiable"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/HasDataSpecification"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/Qualifiable"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/HasSemantics"
        - $ref: "https://api.swaggerhub.com/domains/Plattform_i40/Part1-MetaModel-Schemas/V3.0RC02#/components/schemas/HasKind"
    ValueOnly: 
      description: "The ValueOnly serialization of submodel elements (patternProperties and propertyNames will be supported propably with OpenApi 3.1). The full description of the generic JSON validation schema for the ValueOnly-serialization can be found in chapter 9.4.3 in Details of the Asset Administration Shell Part 2.\n"
      type: object
